{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/Icons.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.2' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<!-- ICONS -->\n<svg display=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <symbol id=\"heading\" fill=\"none\" viewBox=\"0 0 904 551\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_340_10753)\">\n    <path d=\"M72.716 454.812a35.513 35.513 0 0 1-30.301-16.954A287.638 287.638 0 0 1 2.785 327.28a287.69 287.69 0 0 1 7.877-117.208 287.599 287.599 0 0 1 54.07-104.274 287.408 287.408 0 0 1 91.237-73.935 287.233 287.233 0 0 1 229.4-14.616 287.36 287.36 0 0 1 99.874 61.758 287.55 287.55 0 0 1 66.852 96.569 35.598 35.598 0 0 1 .491 27.455 35.575 35.575 0 0 1-19.194 19.626 35.534 35.534 0 0 1-27.444.106 35.58 35.58 0 0 1-11.626-7.796 35.581 35.581 0 0 1-7.718-11.682 216.401 216.401 0 0 0-50.303-72.673 216.269 216.269 0 0 0-75.152-46.48 216.166 216.166 0 0 0-172.63 10.974 216.305 216.305 0 0 0-68.668 55.624 216.432 216.432 0 0 0-40.705 78.459 216.504 216.504 0 0 0 23.848 171.419 35.599 35.599 0 0 1-12.313 49.316 35.556 35.556 0 0 1-17.989 4.89h.024z\" fill=\"#7CBE82\"/>\n    <path d=\"M234.71 427.637h49.009v16.34h-31.043v30.246h24.671v16.34h-24.671v35.105h31.043v16.348H234.71V427.637zM294.005 427.637h17.974v114.419h-17.974V427.637zM325.367 427.637h22.551l17.479 68.487h.327v-68.487h16.012v114.419h-18.444l-21.586-83.558h-.327v83.526h-16.012V427.637zM421.264 427.637h17.973v98.071h29.568v16.348h-47.541V427.637zM477.457 427.637h17.974v114.419h-17.974V427.637zM514.465 536.336c-4.524-4.904-6.786-11.819-6.786-20.744v-61.434c0-8.936 2.262-15.851 6.786-20.744 4.524-4.894 11.084-7.346 19.68-7.356 8.602 0 15.164 2.452 19.688 7.356 4.524 4.904 6.784 11.818 6.778 20.744v12.095h-16.985v-13.244c0-7.08-2.995-10.62-8.987-10.62-5.991 0-8.986 3.54-8.986 10.62v63.915c0 6.973 2.995 10.46 8.986 10.46 5.992 0 8.987-3.487 8.987-10.46v-17.489h16.985v16.181c0 8.936-2.259 15.85-6.778 20.744-4.518 4.893-11.081 7.345-19.688 7.356-8.601-.016-15.161-2.476-19.68-7.38zM571.416 427.637h17.974v46.586h19.273v-46.586h17.974v114.419h-17.974v-51.493H589.39v51.493h-17.974V427.637zM654.06 443.977h-18.787v-16.34h55.539v16.34h-18.787v98.079H654.06v-98.079zM739.494 427.637h24.345l18.627 114.419h-17.973l-3.269-22.722v.327h-20.422l-3.261 22.395h-16.666l18.619-114.419zm19.609 76.498l-7.975-56.56h-.327l-7.838 56.56h16.14zM797.003 536.256c-4.577-4.963-6.865-12.074-6.865-21.335v-87.284h17.973v88.561c0 3.925.798 6.758 2.393 8.497 1.594 1.739 3.854 2.612 6.778 2.617 2.939 0 5.199-.872 6.778-2.617 1.578-1.745 2.376-4.577 2.392-8.497v-88.561h17.32v87.284c0 9.266-2.289 16.378-6.866 21.335-4.577 4.957-11.222 7.436-19.936 7.436-8.739 0-15.395-2.479-19.967-7.436zM856.466 427.637h47.542v16.34h-29.576v31.874h23.205v16.348h-23.205v49.857h-17.966V427.637z\" fill=\"#fff\"/>\n    <path d=\"M135.767 551c19.774 0 35.804-16.039 35.804-35.823 0-19.785-16.03-35.823-35.804-35.823s-35.804 16.038-35.804 35.823c0 19.784 16.03 35.823 35.804 35.823z\" fill=\"#7CBE82\"/>\n    <path d=\"M239.334 397.144a46.57 46.57 0 0 1-5.079-.248v-9.757c.946.097 1.896.145 2.847.143 3.987 0 7.033-1.085 9.106-3.191 2.073-2.106 3.094-5.234 3.094-9.271v-77.495h11.347v77.048c0 7.835-1.746 13.675-5.199 17.345-3.453 3.67-8.835 5.426-16.116 5.426zM277.443 396.553v-99.268h39.647v9.87h-28.3v32.591h22.487v9.87H288.79v37.068h28.3v9.869h-39.647zM344.306 396.553v-89.398h-17.129v-9.87h45.604v9.87h-17.128v89.398h-11.347zM382.43 396.553v-11.609l31.601-77.789h-30.118v-9.87h41.434v11.609l-31.602 77.79h31.602v9.869H382.43zM452.418 396.553v-89.398H435.29v-9.87h45.604v9.87h-17.12v89.398h-11.356zM538.364 398.037c-7.177 0-12.671-2.003-16.323-5.968-3.652-3.965-5.582-9.989-5.582-17.736v-54.836c0-7.747 1.882-13.715 5.582-17.736 3.7-4.021 9.146-5.968 16.323-5.968s12.663 2.011 16.315 5.968c3.652 3.957 5.582 9.989 5.582 17.736v6.383h-10.454v-7.46c0-3.854-1.077-12.766-11.005-12.766-9.927 0-11.004 8.944-11.004 12.766v57.102c0 3.806 1.069 12.646 11.004 12.646 9.936 0 11.005-8.84 11.005-12.646v-22.93h-8.198v-9.862h18.644v31.603c0 7.747-1.882 13.715-5.582 17.736-3.7 4.021-9.13 5.968-16.307 5.968zM575.866 396.553v-99.268h39.647v9.87h-28.292v32.591h22.487v9.87h-22.487v37.068h28.292v9.869h-39.647zM663.876 396.553v-46.937h-22.599v46.937h-11.355v-99.268h11.355v42.461h22.599v-42.461h11.355v99.268h-11.355zM705.277 396.553v-89.398h-17.128v-9.87h45.604v9.87h-17.121v89.398h-11.355zM770.505 396.545v-99.26h22.503c7.376 0 12.918 1.931 16.475 5.753 3.556 3.821 5.43 9.757 5.43 17.504v52.746c0 7.747-1.826 13.635-5.43 17.505-3.604 3.869-9.099 5.752-16.475 5.752h-22.503zm11.348-9.853h10.852c3.413 0 6.117-1.085 8.046-3.192 1.93-2.106 2.815-5.234 2.815-9.438v-54.254c0-4.204-.949-7.38-2.815-9.438-1.866-2.059-4.641-3.191-8.046-3.191h-10.852v79.513zM842.312 297.285h-11.347v99.268h11.347v-99.268zM892.684 396.545a20.376 20.376 0 0 1-.542-2.577 70.702 70.702 0 0 1-.271-7.715v-19.077c0-5.337-.973-9.231-2.878-11.568-2.034-2.498-5.375-3.758-9.912-3.758h-8.174v44.679h-11.355v-99.244h21.761c7.695 0 13.309 1.724 16.674 5.13 3.365 3.407 5.08 8.92 5.08 16.34v6.383c0 9.646-3.07 15.781-9.139 18.223l-1.435.582-.135 1.596v2.393l1.73.519a10.49 10.49 0 0 1 6.898 5.936c1.491 3.335 2.24 7.978 2.24 13.731v18.35a72.782 72.782 0 0 0 .311 7.5c.098.893.255 1.777.471 2.649l-11.324-.072zm-21.777-54.533h8.469c3.987 0 7.057-1.108 9.178-3.295 2.121-2.186 3.19-5.585 3.19-10.244v-8.082c0-4.333-.862-7.62-2.56-9.758-1.834-2.314-4.625-3.486-8.293-3.486h-9.96l-.024 34.865z\" fill=\"#fff\"/>\n    </g>\n    </symbol>\n    <symbol id=\"clouds\" fill=\"none\" viewBox=\"0 0 143 143\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g filter=\"url(#afilter0_d_340_10706)\">\n        <rect x=\"4\" width=\"135\" height=\"135\" rx=\"10\" fill=\"#fff\"/>\n        </g>\n        <path d=\"M51.46 73.723L47.73 88h-2.558l-2.383-8.555a26.635 26.635 0 0 1-.195-.742 85.04 85.04 0 0 1-.215-.879l-.176-.82c-.045-.254-.078-.45-.098-.586a7.18 7.18 0 0 1-.087.576c-.046.248-.101.521-.166.82-.059.293-.124.586-.196.88-.071.286-.136.54-.195.761L39.117 88h-2.549l-3.72-14.277H35.2l2.06 8.369c.066.267.13.556.196.869.072.306.137.615.195.928a28.254 28.254 0 0 1 .303 1.718c.033-.247.075-.52.127-.82.052-.306.108-.615.166-.928.065-.319.13-.625.195-.918.072-.293.144-.556.215-.79l2.324-8.428h2.286l2.373 8.457c.071.24.14.51.205.81a32.133 32.133 0 0 1 .38 1.826c.053.293.095.557.127.791a36.333 36.333 0 0 1 .42-2.343c.092-.423.183-.814.274-1.172l2.05-8.37h2.364zm11.358 8.847c0 .899-.117 1.696-.351 2.393-.235.697-.576 1.286-1.026 1.768-.449.475-.99.84-1.62 1.093-.632.248-1.345.371-2.14.371a5.448 5.448 0 0 1-2.04-.37 4.656 4.656 0 0 1-1.612-1.094c-.449-.482-.797-1.072-1.045-1.768-.247-.697-.37-1.494-.37-2.393 0-1.191.204-2.2.614-3.027.417-.833 1.01-1.468 1.778-1.904.768-.436 1.683-.655 2.744-.655.996 0 1.875.219 2.637.655.761.436 1.357 1.07 1.787 1.904.43.833.644 1.842.644 3.027zm-7.841 0c0 .788.094 1.462.283 2.022.195.56.495.99.898 1.289.404.293.925.44 1.563.44.638 0 1.159-.147 1.562-.44.404-.3.7-.73.889-1.29.189-.56.283-1.233.283-2.02 0-.788-.094-1.456-.283-2.003-.189-.553-.485-.973-.889-1.26-.403-.292-.928-.439-1.572-.439-.95 0-1.644.32-2.08.957-.436.638-.654 1.553-.654 2.744zM67.76 88h-2.305V72.805h2.305V88zm5.576-15.195v7.343c0 .333-.013.697-.04 1.094-.025.39-.051.759-.077 1.104h.049c.169-.228.37-.495.605-.801.24-.306.469-.573.684-.8l3.3-3.556h2.637l-4.326 4.649L80.778 88h-2.696l-3.457-4.746-1.29 1.103V88h-2.294V72.805h2.295zm13.477 4.18c.963 0 1.79.198 2.48.595.69.397 1.22.96 1.592 1.69.37.729.556 1.601.556 2.617v1.23h-7.216c.026 1.048.306 1.856.84 2.422.54.567 1.295.85 2.265.85.69 0 1.309-.065 1.856-.196a10.31 10.31 0 0 0 1.708-.595v1.865c-.54.254-1.09.44-1.65.556-.56.118-1.23.176-2.012.176-1.06 0-1.995-.205-2.802-.615a4.501 4.501 0 0 1-1.885-1.855c-.45-.82-.674-1.84-.674-3.057 0-1.211.205-2.24.615-3.086.41-.846.987-1.49 1.729-1.934.742-.442 1.608-.664 2.597-.664zm0 1.728c-.723 0-1.31.234-1.758.703-.443.469-.703 1.156-.782 2.06h4.922c-.006-.54-.097-1.018-.273-1.435a2.082 2.082 0 0 0-.781-.977c-.345-.234-.788-.351-1.329-.351zm12.851-1.729c1.218 0 2.165.316 2.842.948.683.625 1.025 1.63 1.025 3.017V88h-2.295v-6.621c0-.84-.172-1.468-.517-1.885-.345-.423-.88-.635-1.602-.635-1.048 0-1.777.323-2.187.967-.404.645-.606 1.579-.606 2.803V88H94.03V77.19h1.787l.323 1.464h.127c.234-.377.524-.687.869-.927a3.89 3.89 0 0 1 1.172-.557 4.952 4.952 0 0 1 1.357-.186zM30.182 113h-8.213v-1.416l5.459-7.627H22.3v-1.768h7.724v1.563l-5.351 7.48h5.508V113zm4.628-10.811V113h-2.294v-10.811h2.294zm-1.132-4.14c.351 0 .654.094.908.283.26.189.39.514.39.977 0 .455-.13.781-.39.976a1.478 1.478 0 0 1-.908.283c-.365 0-.674-.094-.928-.283-.247-.195-.371-.52-.371-.976 0-.463.124-.788.371-.977.254-.189.563-.283.928-.283zm8.73 3.935c.964 0 1.79.199 2.48.596.69.397 1.221.96 1.593 1.69.37.729.556 1.601.556 2.617v1.23H39.82c.026 1.048.306 1.856.84 2.422.54.566 1.296.85 2.266.85a7.99 7.99 0 0 0 1.855-.196 10.268 10.268 0 0 0 1.71-.595v1.865c-.541.254-1.091.439-1.651.557-.56.117-1.23.175-2.012.175-1.061 0-1.995-.205-2.803-.615a4.504 4.504 0 0 1-1.884-1.855c-.45-.821-.674-1.84-.674-3.057 0-1.211.205-2.24.615-3.086.41-.846.986-1.491 1.728-1.934.743-.442 1.609-.664 2.598-.664zm0 1.729c-.723 0-1.308.234-1.758.703-.442.469-.703 1.156-.78 2.061h4.921c-.006-.541-.098-1.019-.273-1.436a2.085 2.085 0 0 0-.782-.977c-.345-.234-.787-.351-1.328-.351zm9.512-5.908v3.818c0 .397-.013.785-.04 1.162-.019.378-.041.671-.068.879h.128c.227-.378.507-.687.84-.928a3.566 3.566 0 0 1 1.113-.556c.416-.124.859-.186 1.328-.186.827 0 1.53.14 2.11.42.578.274 1.021.7 1.327 1.279.313.58.469 1.332.469 2.256V113h-2.295v-6.621c0-.84-.172-1.468-.517-1.885-.346-.423-.88-.635-1.602-.635-.697 0-1.25.147-1.66.44-.404.286-.694.713-.87 1.279-.175.56-.263 1.244-.263 2.051V113h-2.295V97.805h2.295zm14.727 4.179c.963 0 1.79.199 2.48.596.69.397 1.22.96 1.592 1.69.37.729.556 1.601.556 2.617v1.23H64.06c.026 1.048.306 1.856.84 2.422.54.566 1.295.85 2.265.85a7.99 7.99 0 0 0 1.855-.196 10.268 10.268 0 0 0 1.71-.595v1.865c-.54.254-1.091.439-1.65.557-.56.117-1.231.175-2.013.175-1.06 0-1.995-.205-2.802-.615a4.503 4.503 0 0 1-1.885-1.855c-.45-.821-.674-1.84-.674-3.057 0-1.211.205-2.24.615-3.086.41-.846.987-1.491 1.729-1.934.742-.442 1.608-.664 2.597-.664zm0 1.729c-.723 0-1.31.234-1.758.703-.443.469-.703 1.156-.782 2.061h4.922c-.006-.541-.097-1.019-.273-1.436a2.085 2.085 0 0 0-.781-.977c-.345-.234-.788-.351-1.328-.351zm12.851-1.729c1.218 0 2.165.316 2.842.948.683.625 1.025 1.63 1.025 3.017V113H81.07v-6.621c0-.84-.172-1.468-.517-1.885-.345-.423-.88-.635-1.602-.635-1.048 0-1.777.323-2.187.967-.404.645-.606 1.579-.606 2.803V113h-2.295v-10.811h1.787l.323 1.465h.127c.234-.377.524-.687.869-.927a3.882 3.882 0 0 1 1.172-.557 4.94 4.94 0 0 1 1.357-.186zm16.514 0c1.367 0 2.399.303 3.095.909.704.605 1.055 1.549 1.055 2.832V113h-1.63l-.44-1.533h-.078c-.306.39-.622.713-.948.967a3.311 3.311 0 0 1-1.132.566c-.424.13-.941.195-1.553.195-.645 0-1.22-.117-1.729-.351a2.75 2.75 0 0 1-1.2-1.094c-.294-.488-.44-1.107-.44-1.855 0-1.114.413-1.95 1.24-2.51.833-.56 2.09-.869 3.77-.928l1.874-.068v-.567c0-.748-.175-1.282-.527-1.601-.345-.319-.833-.479-1.465-.479-.54 0-1.064.078-1.572.235a11.05 11.05 0 0 0-1.484.576l-.742-1.621a8.333 8.333 0 0 1 1.796-.684 8.351 8.351 0 0 1 2.11-.264zm1.875 5.85l-1.397.049c-1.146.039-1.95.234-2.412.586-.462.351-.693.833-.693 1.445 0 .534.16.925.478 1.172.32.241.74.361 1.26.361.794 0 1.452-.224 1.973-.674.527-.455.79-1.123.79-2.002v-.937zm14.912-5.645V113h-1.807l-.312-1.455h-.127c-.228.371-.518.68-.869.928-.352.241-.743.42-1.172.537-.43.123-.882.185-1.358.185-.814 0-1.51-.136-2.09-.41a2.904 2.904 0 0 1-1.318-1.289c-.306-.579-.459-1.328-.459-2.246v-7.061h2.305v6.631c0 .84.169 1.468.508 1.885.345.417.879.625 1.601.625.697 0 1.25-.143 1.66-.43.41-.286.7-.709.869-1.269.176-.56.264-1.247.264-2.061v-5.381h2.305zm8.691 1.749h-2.627V113h-2.295v-9.062h-1.767v-1.104l1.767-.674v-.752c0-.918.144-1.647.43-2.187.293-.54.71-.928 1.25-1.162.547-.241 1.198-.362 1.953-.362.495 0 .947.043 1.358.127.41.078.755.17 1.035.274l-.596 1.738a7.593 7.593 0 0 0-.742-.195 3.795 3.795 0 0 0-.879-.098c-.521 0-.905.163-1.152.488-.241.326-.362.801-.362 1.426v.732h2.627v1.749z\" fill=\"#636363\"/>\n        <g clip-path=\"url(#clip0_340_10706)\" fill=\"#F5D46B\">\n        <path d=\"M77 29.957c-.038.08-.084.158-.113.24-.355.983-1.142 1.575-2.186 1.59-1.223.019-2.447.023-3.67 0-1.32-.024-2.3-1.037-2.293-2.312.012-1.253.995-2.242 2.293-2.267 1.178-.022 2.355-.011 3.533 0 1.179.011 1.948.56 2.347 1.684a.903.903 0 0 0 .092.152l-.003.913zM53.04 53c-.08-.038-.158-.084-.24-.113-.983-.355-1.576-1.142-1.592-2.185-.019-1.223-.022-2.448 0-3.671.024-1.317 1.04-2.304 2.314-2.293 1.252.011 2.243.995 2.267 2.293.022 1.177.012 2.356.004 3.533-.007 1.177-.56 1.949-1.684 2.347a.903.903 0 0 0-.151.092L53.04 53zM53.506 41.262c-6.48.008-11.747-5.247-11.773-11.743-.026-6.496 5.292-11.801 11.778-11.783 6.486.018 11.754 5.289 11.747 11.77a11.77 11.77 0 0 1-11.752 11.756zM38.55 46.892c-.992-.143-1.7-.57-2.103-1.413-.394-.828-.36-1.684.258-2.365a42.513 42.513 0 0 1 3.012-3.014c.861-.775 2.184-.644 3.003.17.82.816.954 2.144.184 3.003a41.779 41.779 0 0 1-3.018 3.01c-.346.313-.886.411-1.337.609zM36.216 14.485c.034-.939.467-1.642 1.313-2.041.827-.391 1.683-.35 2.362.268a43.022 43.022 0 0 1 2.986 2.979c.795.879.673 2.212-.16 3.034-.833.823-2.154.938-3.035.14a41.51 41.51 0 0 1-2.943-2.955c-.323-.357-.43-.909-.635-1.372l.112-.053zM70.774 14.642c.008.542-.267 1.09-.727 1.552-.818.828-1.631 1.655-2.465 2.464-1.003.973-2.415.984-3.326.05-.912-.934-.88-2.299.08-3.294.82-.845 1.653-1.678 2.5-2.497.741-.717 1.618-.9 2.575-.503.855.355 1.369 1.182 1.363 2.228zM68.499 46.777c-.67.013-1.222-.257-1.685-.714-.838-.828-1.68-1.656-2.496-2.5-.951-.99-.956-2.384-.043-3.293.914-.909 2.306-.898 3.293.057a97.382 97.382 0 0 1 2.528 2.533c.703.729.889 1.6.489 2.536-.384.897-1.11 1.346-2.086 1.381zM51.203 10.115c0-.597-.011-1.195 0-1.79.03-1.32 1.02-2.32 2.286-2.325 1.266-.005 2.275.995 2.3 2.312.02 1.208.018 2.417 0 3.625-.02 1.324-1.012 2.318-2.286 2.322-1.274.004-2.267-.988-2.3-2.31-.012-.612 0-1.222 0-1.834zM34.115 31.792c-.597 0-1.196.012-1.789 0-1.323-.03-2.322-1.019-2.326-2.285-.004-1.266.995-2.275 2.312-2.3 1.209-.02 2.417-.02 3.625 0 1.326.022 2.319 1.012 2.321 2.286.003 1.274-.985 2.265-2.308 2.3-.607.012-1.223 0-1.835 0z\"/>\n        </g>\n        <g clip-path=\"url(#aclip1_340_10706)\">\n        <path d=\"M110.868 56a16.609 16.609 0 0 0 2.091-9.449 16.65 16.65 0 0 0-3.54-9.017 16.947 16.947 0 0 0-7.989-5.582 17.135 17.135 0 0 0-9.778-.287 20.967 20.967 0 0 0-8.472-10.378 21.346 21.346 0 0 0-13.094-3.207 21.278 21.278 0 0 0-12.392 5.267 20.864 20.864 0 0 0-6.655 11.6 17.13 17.13 0 0 0-7.621-.13c-2.518.53-4.88 1.619-6.908 3.186a16.788 16.788 0 0 0-4.797 5.858 16.596 16.596 0 0 0-1.008 12.131l80.163.008z\" fill=\"#BDEDED\"/>\n        </g>\n        <defs>\n        <filter id=\"afilter0_d_340_10706\" x=\"0\" y=\"0\" width=\"143\" height=\"143\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\n        <fecolormatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\"/>\n        <fegaussianblur stdDeviation=\"2\"/>\n        <fecolormatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"/>\n        <feblend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow_340_10706\" result=\"shape\"/>\n        </filter>\n        <clippath id=\"aclip1_340_10706\">\n        <path fill=\"#fff\" transform=\"translate(30 18)\" d=\"M0 0h83v38H0z\"/>\n        </clippath>\n        </defs>\n    </symbol>\n    <symbol id=\"wind\" fill=\"none\" viewBox=\"0 0 143 143\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g filter=\"url(#afilter0_d_340_10699)\">\n        <rect x=\"4\" width=\"135\" height=\"135\" rx=\"10\" fill=\"#fff\"/>\n        </g>\n        <path d=\"M44.115 85.08c0 .996-.37 1.764-1.113 2.305-.742.54-1.784.81-3.125.81-1.42 0-2.526-.224-3.32-.673v-1.504c.514.26 1.064.465 1.65.615.593.15 1.162.224 1.709.224.846 0 1.497-.133 1.953-.4.456-.273.684-.687.684-1.24 0-.417-.183-.772-.547-1.065-.358-.3-1.061-.65-2.11-1.054-.996-.371-1.705-.694-2.128-.967-.417-.28-.73-.596-.938-.947-.202-.352-.303-.772-.303-1.26 0-.873.355-1.56 1.065-2.06.71-.508 1.683-.762 2.92-.762 1.152 0 2.278.234 3.379.703l-.576 1.318c-1.075-.443-2.048-.664-2.92-.664-.769 0-1.348.12-1.739.361-.39.241-.586.573-.586.996 0 .287.072.531.215.733.15.202.388.394.713.576.326.182.95.446 1.875.791 1.27.462 2.126.928 2.568 1.397.45.468.674 1.057.674 1.767zm6.104 1.777c.286 0 .563-.02.83-.058.267-.046.478-.091.635-.137v1.24c-.176.085-.437.153-.782.205a5.43 5.43 0 0 1-.918.088c-2.07 0-3.105-1.09-3.105-3.271v-6.367h-1.533v-.782l1.533-.673.684-2.286h.937v2.48h3.105v1.26H48.5v6.3c0 .644.153 1.139.459 1.484.306.345.726.517 1.26.517zM60.414 88l-.322-1.523h-.078c-.534.67-1.068 1.126-1.602 1.367-.527.234-1.188.351-1.982.351-1.062 0-1.895-.273-2.5-.82-.6-.547-.899-1.325-.899-2.334 0-2.161 1.729-3.294 5.186-3.398l1.816-.059v-.664c0-.84-.182-1.458-.547-1.856-.358-.403-.934-.605-1.728-.605-.892 0-1.901.273-3.028.82l-.498-1.24a7.639 7.639 0 0 1 1.729-.674 7.568 7.568 0 0 1 1.895-.244c1.276 0 2.22.283 2.831.85.619.566.928 1.474.928 2.724V88h-1.2zm-3.662-1.143c1.01 0 1.8-.276 2.373-.83.58-.553.87-1.328.87-2.324v-.967l-1.622.069c-1.289.045-2.22.247-2.793.605-.566.352-.85.902-.85 1.65 0 .587.176 1.032.528 1.338.358.306.856.46 1.494.46zm13.096-9.755c.475 0 .901.039 1.279.117l-.225 1.504a5.519 5.519 0 0 0-1.171-.147c-.866 0-1.609.352-2.227 1.055-.612.703-.918 1.579-.918 2.627V88h-1.621V77.297h1.338l.185 1.982h.078c.397-.696.876-1.233 1.436-1.611a3.231 3.231 0 0 1 1.846-.566zm4.883 5.42c.28-.398.706-.919 1.279-1.563l3.457-3.662h1.924l-4.336 4.56L81.693 88h-1.962l-3.78-5.059-1.22 1.055V88h-1.602V72.805h1.602v8.056c0 .358-.027.912-.079 1.66h.079zm13.427 5.673c-1.582 0-2.832-.481-3.75-1.445-.911-.963-1.367-2.301-1.367-4.014 0-1.725.423-3.095 1.27-4.111.852-1.016 1.995-1.523 3.427-1.523 1.341 0 2.403.442 3.184 1.328.781.879 1.172 2.04 1.172 3.486v1.025H84.72c.032 1.257.348 2.21.947 2.862.605.65 1.455.976 2.549.976a8.62 8.62 0 0 0 3.418-.722v1.445a8.298 8.298 0 0 1-1.631.527c-.508.111-1.123.166-1.846.166zm-.44-9.736c-.859 0-1.546.28-2.06.84-.508.56-.807 1.334-.898 2.324h5.596c0-1.022-.228-1.803-.684-2.344-.456-.547-1.107-.82-1.953-.82zm12.032-1.357c.475 0 .902.039 1.279.117l-.224 1.504a5.524 5.524 0 0 0-1.172-.147c-.866 0-1.608.352-2.227 1.055-.612.703-.918 1.579-.918 2.627V88h-1.62V77.297h1.337l.186 1.982h.078c.397-.696.875-1.233 1.435-1.611a3.232 3.232 0 0 1 1.846-.566zM61.361 113h-1.64l-2.881-9.561c-.137-.423-.29-.957-.46-1.601-.168-.645-.256-1.032-.263-1.162a22.24 22.24 0 0 1-.683 2.822L52.64 113H51l-3.799-14.277h1.758l2.256 8.818c.312 1.237.54 2.357.683 3.359.176-1.191.437-2.356.782-3.496l2.558-8.681h1.758l2.686 8.759c.312 1.01.576 2.149.79 3.418.124-.924.359-2.05.704-3.379l2.246-8.798h1.758L61.36 113zm7.432 0h-1.621v-10.703h1.621V113zm-1.758-13.603c0-.372.091-.642.274-.811a.946.946 0 0 1 .683-.264c.26 0 .485.088.674.264.189.176.283.446.283.81 0 .365-.094.639-.283.821a.954.954 0 0 1-.674.263.944.944 0 0 1-.683-.263c-.183-.182-.274-.456-.274-.82zM79.555 113v-6.924c0-.872-.199-1.523-.596-1.953-.397-.43-1.019-.644-1.865-.644-1.12 0-1.94.302-2.461.908-.521.605-.781 1.605-.781 2.998V113H72.23v-10.703h1.318l.263 1.465h.079a3.272 3.272 0 0 1 1.396-1.221c.6-.293 1.266-.439 2.002-.439 1.29 0 2.26.312 2.91.937.651.619.977 1.611.977 2.979V113h-1.621zm12.246-1.436h-.088c-.749 1.088-1.869 1.631-3.36 1.631-1.4 0-2.49-.478-3.271-1.435-.775-.957-1.162-2.318-1.162-4.082 0-1.765.39-3.135 1.172-4.112.781-.976 1.868-1.464 3.261-1.464 1.452 0 2.566.527 3.34 1.582h.127l-.068-.772-.04-.752v-4.355h1.622V113h-1.318l-.215-1.436zm-3.242.274c1.106 0 1.907-.3 2.402-.899.501-.605.752-1.578.752-2.919v-.342c0-1.517-.254-2.598-.762-3.242-.501-.651-1.305-.977-2.412-.977-.95 0-1.68.371-2.187 1.113-.502.736-.752 1.778-.752 3.125 0 1.367.25 2.399.752 3.096.5.697 1.236 1.045 2.207 1.045z\" fill=\"#636363\"/>\n        <g clip-path=\"url(#clip0_340_10699)\" fill=\"#C0BEBE\">\n        <path d=\"M69.942 38.657c-6.237 0-12.474.035-18.716-.047-.729 0-1.728-.465-2.111-1.047-.757-1.15.325-2.386 2.016-2.394 5.66-.023 11.322-.023 16.989-.032 6.622 0 13.245 0 19.868-.03 2.427 0 4.771-.47 6.873-1.797 3.991-2.522 5.215-7.855 2.693-11.695-1.984-3.031-5.823-4.017-8.532-2.187-2.25 1.518-2.958 4.171-1.728 6.49.95 1.8 2.511 2.365 4.348 1.57a6.66 6.66 0 0 0 .64-.33c1.658-.943 2.51-.923 3.12.075.65 1.059.177 2.05-1.416 2.973-2.88 1.678-5.81 1.524-8.028-.425-2.445-2.15-3.372-5.943-2.209-9.035 1.82-4.844 7.309-7.096 12.149-4.905 3.715 1.681 5.854 4.654 6.318 8.727.529 4.655-1.121 8.48-4.895 11.261-2.822 2.077-6.09 2.767-9.503 2.781-5.949.026-11.898 0-17.853 0l-.023.047zM67.66 42.689h26.778c2.828 0 5.56.45 8.063 1.82 4.063 2.226 6.51 5.636 6.508 10.38-.003 4.745-2.5 8.018-6.543 10.182-2.692 1.431-5.62 1.891-8.638 1.932-1.083 0-1.924-.413-1.987-1.623-.069-1.286.734-1.833 1.898-1.865 2.92-.079 5.739-.538 8.226-2.214 3.997-2.69 4.789-7.66 1.757-11.375-2.246-2.752-5.353-3.65-8.728-3.706-4.224-.07-8.445-.026-12.67-.029L40.72 46.16H39.71c-1.526-.035-2.304-.64-2.304-1.774 0-1.135.766-1.717 2.33-1.717h27.93l-.008.02z\"/>\n        <path d=\"M56.357 29.682c-6.334 0-12.67.03-19.004-.038-.706 0-1.653-.378-2.059-.913-.795-1.039.092-2.44 1.523-2.522 1.34-.076 2.684-.02 4.032-.018l33.825.058c.432 0 .864-.017 1.293.018 1.111.09 1.837.643 1.785 1.835-.046 1.118-.766 1.62-1.823 1.63-2.35.017-4.702 0-7.052 0H56.355l.002-.05z\"/>\n        </g>\n        <defs>\n        <filter id=\"afilter0_d_340_10699\" x=\"0\" y=\"0\" width=\"143\" height=\"143\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\n        <fecolormatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\"/>\n        <fegaussianblur stdDeviation=\"2\"/>\n        <fecolormatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"/>\n        <feblend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow_340_10699\" result=\"shape\"/>\n        </filter>\n        </defs>\n    </symbol>\n    <symbol id=\"dare\" fill=\"none\" viewBox=\"0 0 143 143\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g filter=\"url(#afilter0_d_340_10722)\">\n        <rect x=\"4\" width=\"135\" height=\"135\" rx=\"10\" fill=\"#fff\"/>\n        </g>\n        <path d=\"M44.984 75.43L20.37 90.693V96.6l24.615-15.384L69.6 96.6v-5.908L44.984 75.431zM99.015 60.17l24.492-15.262V39L99.015 54.385 74.4 39v5.908l24.615 15.261z\" fill=\"#5DB77A\"/>\n        <path d=\"M42.646 52.538c0 4.431-1.23 7.877-3.815 10.339-2.585 2.338-6.277 3.57-11.077 3.57H20V39.122h8.615c4.431 0 7.877 1.23 10.339 3.57 2.461 2.338 3.692 5.66 3.692 9.845zm-5.907.123c0-5.907-2.585-8.738-7.754-8.738h-3.077v17.723h2.461c5.539 0 8.37-2.954 8.37-8.985zM64.308 66.446l-1.97-6.523H52.37L50.4 66.446h-6.277L53.723 39h7.016l9.723 27.446h-6.154zm-3.323-11.323c-1.846-5.908-2.83-9.23-3.077-9.97-.246-.738-.37-1.353-.492-1.845-.37 1.6-1.6 5.538-3.57 11.815h7.139zM83.63 86.138V96.6h-5.784V69.277h8c3.692 0 6.4.615 8.246 1.97C95.815 72.6 96.8 74.691 96.8 77.4a7.46 7.46 0 0 1-1.354 4.308c-.861 1.23-2.092 2.215-3.692 2.954 4.061 6.153 6.77 10.092 8 11.938h-6.4L86.83 86.138h-3.2zm0-4.184h1.847c1.846 0 3.2-.246 4.061-.862.862-.615 1.354-1.6 1.354-2.83 0-1.354-.492-2.216-1.353-2.708-.862-.493-2.216-.862-4.185-.862H83.63v7.262zM120.923 96.6h-16.492V69.277h16.492v4.8h-10.707v6.03h9.969v4.8h-9.969v7.016h10.707V96.6z\" fill=\"#646363\"/>\n        <defs>\n        <filter id=\"afilter0_d_340_10722\" x=\"0\" y=\"0\" width=\"143\" height=\"143\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\n        <fecolormatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\"/>\n        <fegaussianblur stdDeviation=\"2\"/>\n        <fecolormatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"/>\n        <feblend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow_340_10722\" result=\"shape\"/>\n        </filter>\n        </defs>\n    </symbol>\n    <symbol id=\"windpressed\" fill=\"none\" viewBox=\"0 0 143 143\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g filter=\"url(#afilter0_d_340_10251)\">\n        <rect x=\"4\" width=\"135\" height=\"135\" rx=\"10\" fill=\"#636363\"/>\n        </g>\n        <path d=\"M44.115 85.08c0 .996-.37 1.764-1.113 2.305-.742.54-1.784.81-3.125.81-1.42 0-2.526-.224-3.32-.673v-1.504c.514.26 1.064.465 1.65.615.593.15 1.162.224 1.709.224.846 0 1.497-.133 1.953-.4.456-.273.684-.687.684-1.24 0-.417-.183-.772-.547-1.065-.358-.3-1.061-.65-2.11-1.054-.996-.371-1.705-.694-2.128-.967-.417-.28-.73-.596-.938-.947-.202-.352-.303-.772-.303-1.26 0-.873.355-1.56 1.065-2.06.71-.508 1.683-.762 2.92-.762 1.152 0 2.278.234 3.379.703l-.576 1.318c-1.075-.443-2.048-.664-2.92-.664-.769 0-1.348.12-1.739.361-.39.241-.586.573-.586.996 0 .287.072.531.215.733.15.202.388.394.713.576.326.182.95.446 1.875.791 1.27.462 2.126.928 2.568 1.397.45.468.674 1.057.674 1.767zm6.104 1.777c.286 0 .563-.02.83-.058.267-.046.478-.091.635-.137v1.24c-.176.085-.437.153-.782.205a5.43 5.43 0 0 1-.918.088c-2.07 0-3.105-1.09-3.105-3.271v-6.367h-1.533v-.782l1.533-.673.684-2.286h.937v2.48h3.105v1.26H48.5v6.3c0 .644.153 1.139.459 1.484.306.345.726.517 1.26.517zM60.414 88l-.322-1.523h-.078c-.534.67-1.068 1.126-1.602 1.367-.527.234-1.188.351-1.982.351-1.062 0-1.895-.273-2.5-.82-.6-.547-.899-1.325-.899-2.334 0-2.161 1.729-3.294 5.186-3.398l1.816-.059v-.664c0-.84-.182-1.458-.547-1.856-.358-.403-.934-.605-1.728-.605-.892 0-1.901.273-3.028.82l-.498-1.24a7.639 7.639 0 0 1 1.729-.674 7.568 7.568 0 0 1 1.895-.244c1.276 0 2.22.283 2.831.85.619.566.928 1.474.928 2.724V88h-1.2zm-3.662-1.143c1.01 0 1.8-.276 2.373-.83.58-.553.87-1.328.87-2.324v-.967l-1.622.069c-1.289.045-2.22.247-2.793.605-.566.352-.85.902-.85 1.65 0 .587.176 1.032.528 1.338.358.306.856.46 1.494.46zm13.096-9.755c.475 0 .901.039 1.279.117l-.225 1.504a5.519 5.519 0 0 0-1.171-.147c-.866 0-1.609.352-2.227 1.055-.612.703-.918 1.579-.918 2.627V88h-1.621V77.297h1.338l.185 1.982h.078c.397-.696.876-1.233 1.436-1.611a3.231 3.231 0 0 1 1.846-.566zm4.883 5.42c.28-.398.706-.919 1.279-1.563l3.457-3.662h1.924l-4.336 4.56L81.693 88h-1.962l-3.78-5.059-1.22 1.055V88h-1.602V72.805h1.602v8.056c0 .358-.027.912-.079 1.66h.079zm13.427 5.673c-1.582 0-2.832-.481-3.75-1.445-.911-.963-1.367-2.301-1.367-4.014 0-1.725.423-3.095 1.27-4.111.852-1.016 1.995-1.523 3.427-1.523 1.341 0 2.403.442 3.184 1.328.781.879 1.172 2.04 1.172 3.486v1.025H84.72c.032 1.257.348 2.21.947 2.862.605.65 1.455.976 2.549.976a8.62 8.62 0 0 0 3.418-.722v1.445a8.298 8.298 0 0 1-1.631.527c-.508.111-1.123.166-1.846.166zm-.44-9.736c-.859 0-1.546.28-2.06.84-.508.56-.807 1.334-.898 2.324h5.596c0-1.022-.228-1.803-.684-2.344-.456-.547-1.107-.82-1.953-.82zm12.032-1.357c.475 0 .902.039 1.279.117l-.224 1.504a5.524 5.524 0 0 0-1.172-.147c-.866 0-1.608.352-2.227 1.055-.612.703-.918 1.579-.918 2.627V88h-1.62V77.297h1.337l.186 1.982h.078c.397-.696.875-1.233 1.435-1.611a3.232 3.232 0 0 1 1.846-.566zM61.361 113h-1.64l-2.881-9.561c-.137-.423-.29-.957-.46-1.601-.168-.645-.256-1.032-.263-1.162a22.24 22.24 0 0 1-.683 2.822L52.64 113H51l-3.799-14.277h1.758l2.256 8.818c.312 1.237.54 2.357.683 3.359.176-1.191.437-2.356.782-3.496l2.558-8.681h1.758l2.686 8.759c.312 1.01.576 2.149.79 3.418.124-.924.359-2.05.704-3.379l2.246-8.798h1.758L61.36 113zm7.432 0h-1.621v-10.703h1.621V113zm-1.758-13.603c0-.372.091-.642.274-.811a.946.946 0 0 1 .683-.264c.26 0 .485.088.674.264.189.176.283.446.283.81 0 .365-.094.639-.283.821a.954.954 0 0 1-.674.263.944.944 0 0 1-.683-.263c-.183-.182-.274-.456-.274-.82zM79.555 113v-6.924c0-.872-.199-1.523-.596-1.953-.397-.43-1.019-.644-1.865-.644-1.12 0-1.94.302-2.461.908-.521.605-.781 1.605-.781 2.998V113H72.23v-10.703h1.318l.263 1.465h.079a3.272 3.272 0 0 1 1.396-1.221c.6-.293 1.266-.439 2.002-.439 1.29 0 2.26.312 2.91.937.651.619.977 1.611.977 2.979V113h-1.621zm12.246-1.436h-.088c-.749 1.088-1.869 1.631-3.36 1.631-1.4 0-2.49-.478-3.271-1.435-.775-.957-1.162-2.318-1.162-4.082 0-1.765.39-3.135 1.172-4.112.781-.976 1.868-1.464 3.261-1.464 1.452 0 2.566.527 3.34 1.582h.127l-.068-.772-.04-.752v-4.355h1.622V113h-1.318l-.215-1.436zm-3.242.274c1.106 0 1.907-.3 2.402-.899.501-.605.752-1.578.752-2.919v-.342c0-1.517-.254-2.598-.762-3.242-.501-.651-1.305-.977-2.412-.977-.95 0-1.68.371-2.187 1.113-.502.736-.752 1.778-.752 3.125 0 1.367.25 2.399.752 3.096.5.697 1.236 1.045 2.207 1.045z\" fill=\"#fff\"/>\n        <g clip-path=\"url(#clip0_340_10251)\" fill=\"#C0BEBE\">\n        <path d=\"M69.942 38.657c-6.236 0-12.473.035-18.716-.047-.729 0-1.728-.465-2.11-1.047-.758-1.15.325-2.386 2.015-2.394 5.66-.023 11.322-.023 16.989-.032 6.623 0 13.245 0 19.868-.03 2.428 0 4.772-.47 6.874-1.797 3.99-2.522 5.214-7.855 2.692-11.695-1.984-3.031-5.822-4.017-8.532-2.187-2.249 1.518-2.957 4.171-1.728 6.49.95 1.8 2.511 2.365 4.348 1.57.22-.098.433-.209.64-.33 1.658-.943 2.51-.923 3.121.075.649 1.059.177 2.05-1.417 2.973-2.88 1.678-5.81 1.524-8.028-.425-2.444-2.15-3.372-5.943-2.208-9.035 1.82-4.844 7.308-7.096 12.148-4.905 3.715 1.681 5.854 4.654 6.318 8.727.53 4.655-1.12 8.48-4.895 11.261-2.822 2.077-6.09 2.767-9.503 2.781-5.949.026-11.898 0-17.852 0l-.023.047zM67.66 42.689h26.779c2.827 0 5.56.45 8.062 1.82 4.063 2.226 6.511 5.636 6.508 10.38-.003 4.745-2.5 8.018-6.542 10.182-2.693 1.432-5.621 1.891-8.639 1.932-1.083 0-1.924-.413-1.987-1.623-.069-1.286.735-1.833 1.898-1.865 2.92-.078 5.739-.538 8.226-2.214 3.997-2.69 4.789-7.66 1.757-11.374-2.246-2.752-5.353-3.651-8.728-3.706-4.224-.07-8.445-.027-12.67-.03L40.72 46.16H39.71c-1.526-.035-2.304-.64-2.304-1.774 0-1.135.766-1.716 2.33-1.716h27.93l-.008.02z\"/>\n        <path d=\"M56.357 29.682c-6.335 0-12.67.03-19.004-.037-.706 0-1.653-.379-2.06-.914-.794-1.039.093-2.44 1.524-2.522 1.34-.076 2.684-.02 4.031-.018l33.826.059c.432 0 .864-.018 1.293.017 1.111.09 1.837.643 1.785 1.836-.046 1.117-.766 1.62-1.823 1.629-2.35.017-4.702 0-7.052 0H56.354l.003-.05z\"/>\n        </g>\n        <defs>\n        <filter id=\"afilter0_d_340_10251\" x=\"0\" y=\"0\" width=\"143\" height=\"143\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\n        <fecolormatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\"/>\n        <fegaussianblur stdDeviation=\"2\"/>\n        <fecolormatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"/>\n        <feblend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow_340_10251\" result=\"shape\"/>\n        </filter>\n        </defs>\n    </symbol>\n    <symbol id=\"cloudspressed\" fill=\"none\" viewBox=\"0 0 143 143\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g filter=\"url(#afilter0_d_340_10070)\">\n        <rect x=\"4\" width=\"135\" height=\"135\" rx=\"10\" fill=\"#636363\"/>\n        </g>\n        <path d=\"M51.46 73.723L47.73 88h-2.558l-2.383-8.555a26.635 26.635 0 0 1-.195-.742 85.04 85.04 0 0 1-.215-.879l-.176-.82c-.045-.254-.078-.45-.098-.586a7.18 7.18 0 0 1-.087.576c-.046.248-.101.521-.166.82-.059.293-.124.586-.196.88-.071.286-.136.54-.195.761L39.117 88h-2.549l-3.72-14.277H35.2l2.06 8.369c.066.267.13.556.196.869.072.306.137.615.195.928a28.254 28.254 0 0 1 .303 1.718c.033-.247.075-.52.127-.82.052-.306.108-.615.166-.928.065-.319.13-.625.195-.918.072-.293.144-.556.215-.79l2.324-8.428h2.286l2.373 8.457c.071.24.14.51.205.81a32.133 32.133 0 0 1 .38 1.826c.053.293.095.557.127.791a36.333 36.333 0 0 1 .42-2.343c.092-.423.183-.814.274-1.172l2.05-8.37h2.364zm11.358 8.847c0 .899-.117 1.696-.351 2.393-.235.697-.576 1.286-1.026 1.768-.449.475-.99.84-1.62 1.093-.632.248-1.345.371-2.14.371a5.448 5.448 0 0 1-2.04-.37 4.656 4.656 0 0 1-1.612-1.094c-.449-.482-.797-1.072-1.045-1.768-.247-.697-.37-1.494-.37-2.393 0-1.191.204-2.2.614-3.027.417-.833 1.01-1.468 1.778-1.904.768-.436 1.683-.655 2.744-.655.996 0 1.875.219 2.637.655.761.436 1.357 1.07 1.787 1.904.43.833.644 1.842.644 3.027zm-7.841 0c0 .788.094 1.462.283 2.022.195.56.495.99.898 1.289.404.293.925.44 1.563.44.638 0 1.159-.147 1.562-.44.404-.3.7-.73.889-1.29.189-.56.283-1.233.283-2.02 0-.788-.094-1.456-.283-2.003-.189-.553-.485-.973-.889-1.26-.403-.292-.928-.439-1.572-.439-.95 0-1.644.32-2.08.957-.436.638-.654 1.553-.654 2.744zM67.76 88h-2.305V72.805h2.305V88zm5.576-15.195v7.343c0 .333-.013.697-.04 1.094-.025.39-.051.759-.077 1.104h.049c.169-.228.37-.495.605-.801.24-.306.469-.573.684-.8l3.3-3.556h2.637l-4.326 4.649L80.778 88h-2.696l-3.457-4.746-1.29 1.103V88h-2.294V72.805h2.295zm13.477 4.18c.963 0 1.79.198 2.48.595.69.397 1.22.96 1.592 1.69.37.729.556 1.601.556 2.617v1.23h-7.216c.026 1.048.306 1.856.84 2.422.54.567 1.295.85 2.265.85.69 0 1.309-.065 1.856-.196a10.31 10.31 0 0 0 1.708-.595v1.865c-.54.254-1.09.44-1.65.556-.56.118-1.23.176-2.012.176-1.06 0-1.995-.205-2.802-.615a4.501 4.501 0 0 1-1.885-1.855c-.45-.82-.674-1.84-.674-3.057 0-1.211.205-2.24.615-3.086.41-.846.987-1.49 1.729-1.934.742-.442 1.608-.664 2.597-.664zm0 1.728c-.723 0-1.31.234-1.758.703-.443.469-.703 1.156-.782 2.06h4.922c-.006-.54-.097-1.018-.273-1.435a2.082 2.082 0 0 0-.781-.977c-.345-.234-.788-.351-1.329-.351zm12.851-1.729c1.218 0 2.165.316 2.842.948.683.625 1.025 1.63 1.025 3.017V88h-2.295v-6.621c0-.84-.172-1.468-.517-1.885-.345-.423-.88-.635-1.602-.635-1.048 0-1.777.323-2.187.967-.404.645-.606 1.579-.606 2.803V88H94.03V77.19h1.787l.323 1.464h.127c.234-.377.524-.687.869-.927a3.89 3.89 0 0 1 1.172-.557 4.952 4.952 0 0 1 1.357-.186zM30.182 113h-8.213v-1.416l5.459-7.627H22.3v-1.768h7.724v1.563l-5.351 7.48h5.508V113zm4.628-10.811V113h-2.294v-10.811h2.294zm-1.132-4.14c.351 0 .654.094.908.283.26.189.39.514.39.977 0 .455-.13.781-.39.976a1.478 1.478 0 0 1-.908.283c-.365 0-.674-.094-.928-.283-.247-.195-.371-.52-.371-.976 0-.463.124-.788.371-.977.254-.189.563-.283.928-.283zm8.73 3.935c.964 0 1.79.199 2.48.596.69.397 1.221.96 1.593 1.69.37.729.556 1.601.556 2.617v1.23H39.82c.026 1.048.306 1.856.84 2.422.54.566 1.296.85 2.266.85a7.99 7.99 0 0 0 1.855-.196 10.268 10.268 0 0 0 1.71-.595v1.865c-.541.254-1.091.439-1.651.557-.56.117-1.23.175-2.012.175-1.061 0-1.995-.205-2.803-.615a4.504 4.504 0 0 1-1.884-1.855c-.45-.821-.674-1.84-.674-3.057 0-1.211.205-2.24.615-3.086.41-.846.986-1.491 1.728-1.934.743-.442 1.609-.664 2.598-.664zm0 1.729c-.723 0-1.308.234-1.758.703-.442.469-.703 1.156-.78 2.061h4.921c-.006-.541-.098-1.019-.273-1.436a2.085 2.085 0 0 0-.782-.977c-.345-.234-.787-.351-1.328-.351zm9.512-5.908v3.818c0 .397-.013.785-.04 1.162-.019.378-.041.671-.068.879h.128c.227-.378.507-.687.84-.928a3.566 3.566 0 0 1 1.113-.556c.416-.124.859-.186 1.328-.186.827 0 1.53.14 2.11.42.578.274 1.021.7 1.327 1.279.313.58.469 1.332.469 2.256V113h-2.295v-6.621c0-.84-.172-1.468-.517-1.885-.346-.423-.88-.635-1.602-.635-.697 0-1.25.147-1.66.44-.404.286-.694.713-.87 1.279-.175.56-.263 1.244-.263 2.051V113h-2.295V97.805h2.295zm14.727 4.179c.963 0 1.79.199 2.48.596.69.397 1.22.96 1.592 1.69.37.729.556 1.601.556 2.617v1.23H64.06c.026 1.048.306 1.856.84 2.422.54.566 1.295.85 2.265.85a7.99 7.99 0 0 0 1.855-.196 10.268 10.268 0 0 0 1.71-.595v1.865c-.54.254-1.091.439-1.65.557-.56.117-1.231.175-2.013.175-1.06 0-1.995-.205-2.802-.615a4.503 4.503 0 0 1-1.885-1.855c-.45-.821-.674-1.84-.674-3.057 0-1.211.205-2.24.615-3.086.41-.846.987-1.491 1.729-1.934.742-.442 1.608-.664 2.597-.664zm0 1.729c-.723 0-1.31.234-1.758.703-.443.469-.703 1.156-.782 2.061h4.922c-.006-.541-.097-1.019-.273-1.436a2.085 2.085 0 0 0-.781-.977c-.345-.234-.788-.351-1.328-.351zm12.851-1.729c1.218 0 2.165.316 2.842.948.683.625 1.025 1.63 1.025 3.017V113H81.07v-6.621c0-.84-.172-1.468-.517-1.885-.345-.423-.88-.635-1.602-.635-1.048 0-1.777.323-2.187.967-.404.645-.606 1.579-.606 2.803V113h-2.295v-10.811h1.787l.323 1.465h.127c.234-.377.524-.687.869-.927a3.882 3.882 0 0 1 1.172-.557 4.94 4.94 0 0 1 1.357-.186zm16.514 0c1.367 0 2.399.303 3.095.909.704.605 1.055 1.549 1.055 2.832V113h-1.63l-.44-1.533h-.078c-.306.39-.622.713-.948.967a3.311 3.311 0 0 1-1.132.566c-.424.13-.941.195-1.553.195-.645 0-1.22-.117-1.729-.351a2.75 2.75 0 0 1-1.2-1.094c-.294-.488-.44-1.107-.44-1.855 0-1.114.413-1.95 1.24-2.51.833-.56 2.09-.869 3.77-.928l1.874-.068v-.567c0-.748-.175-1.282-.527-1.601-.345-.319-.833-.479-1.465-.479-.54 0-1.064.078-1.572.235a11.05 11.05 0 0 0-1.484.576l-.742-1.621a8.333 8.333 0 0 1 1.796-.684 8.351 8.351 0 0 1 2.11-.264zm1.875 5.85l-1.397.049c-1.146.039-1.95.234-2.412.586-.462.351-.693.833-.693 1.445 0 .534.16.925.478 1.172.32.241.74.361 1.26.361.794 0 1.452-.224 1.973-.674.527-.455.79-1.123.79-2.002v-.937zm14.912-5.645V113h-1.807l-.312-1.455h-.127c-.228.371-.518.68-.869.928-.352.241-.743.42-1.172.537-.43.123-.882.185-1.358.185-.814 0-1.51-.136-2.09-.41a2.904 2.904 0 0 1-1.318-1.289c-.306-.579-.459-1.328-.459-2.246v-7.061h2.305v6.631c0 .84.169 1.468.508 1.885.345.417.879.625 1.601.625.697 0 1.25-.143 1.66-.43.41-.286.7-.709.869-1.269.176-.56.264-1.247.264-2.061v-5.381h2.305zm8.691 1.749h-2.627V113h-2.295v-9.062h-1.767v-1.104l1.767-.674v-.752c0-.918.144-1.647.43-2.187.293-.54.71-.928 1.25-1.162.547-.241 1.198-.362 1.953-.362.495 0 .947.043 1.358.127.41.078.755.17 1.035.274l-.596 1.738a7.593 7.593 0 0 0-.742-.195 3.795 3.795 0 0 0-.879-.098c-.521 0-.905.163-1.152.488-.241.326-.362.801-.362 1.426v.732h2.627v1.749z\" fill=\"#fff\"/>\n        <g clip-path=\"url(#clip0_340_10070)\" fill=\"#F5D46B\">\n        <path d=\"M77 29.958c-.038.08-.084.157-.113.24-.355.982-1.142 1.574-2.186 1.59a111.18 111.18 0 0 1-3.67 0c-1.32-.025-2.3-1.038-2.293-2.313.012-1.253.995-2.242 2.293-2.267 1.178-.022 2.355-.011 3.533 0 1.179.011 1.948.56 2.347 1.684a.903.903 0 0 0 .092.152l-.003.914zM53.04 53c-.08-.038-.158-.084-.24-.113-.983-.355-1.576-1.142-1.592-2.185-.019-1.223-.022-2.448 0-3.671.024-1.317 1.04-2.304 2.314-2.293 1.252.011 2.243.995 2.267 2.293.022 1.177.012 2.356.004 3.533-.007 1.177-.56 1.949-1.684 2.347a.902.902 0 0 0-.151.092L53.04 53zM53.506 41.262c-6.48.009-11.747-5.247-11.773-11.743-.026-6.496 5.292-11.801 11.778-11.783 6.486.018 11.754 5.289 11.747 11.771a11.77 11.77 0 0 1-11.752 11.755zM38.549 46.892c-.992-.143-1.7-.57-2.102-1.413-.394-.828-.36-1.684.258-2.365a42.534 42.534 0 0 1 3.012-3.014c.861-.775 2.184-.644 3.003.17.82.816.954 2.144.184 3.003a41.758 41.758 0 0 1-3.019 3.01c-.345.313-.885.411-1.336.609zM36.216 14.485c.034-.939.468-1.642 1.313-2.041.828-.391 1.683-.35 2.363.268a43.044 43.044 0 0 1 2.985 2.979c.795.879.673 2.212-.16 3.034-.833.823-2.154.938-3.035.14a41.51 41.51 0 0 1-2.943-2.955c-.323-.357-.43-.909-.635-1.372l.112-.053zM70.774 14.643c.008.541-.267 1.088-.727 1.55-.818.829-1.631 1.656-2.465 2.465-1.003.973-2.415.984-3.326.05-.912-.934-.88-2.299.08-3.294.82-.845 1.653-1.678 2.5-2.497.741-.717 1.618-.9 2.575-.503.855.355 1.369 1.182 1.363 2.229zM68.499 46.777c-.67.013-1.222-.257-1.685-.714-.838-.828-1.68-1.656-2.496-2.5-.951-.99-.956-2.384-.043-3.293.913-.909 2.306-.898 3.293.057a97.697 97.697 0 0 1 2.528 2.533c.703.729.889 1.6.489 2.536-.384.897-1.11 1.346-2.086 1.381zM51.203 10.115c0-.597-.011-1.195 0-1.79.03-1.32 1.02-2.32 2.286-2.325 1.266-.005 2.275.995 2.3 2.312.02 1.208.018 2.417 0 3.625-.02 1.324-1.012 2.318-2.286 2.322-1.274.004-2.267-.988-2.3-2.31-.012-.612 0-1.222 0-1.834zM34.115 31.792c-.597 0-1.196.012-1.789 0-1.323-.03-2.322-1.019-2.326-2.285-.004-1.266.995-2.275 2.312-2.299 1.209-.02 2.417-.02 3.625 0 1.326.021 2.319 1.012 2.321 2.285.003 1.274-.985 2.265-2.308 2.3-.607.012-1.224 0-1.835 0z\"/>\n        </g>\n        <g clip-path=\"url(#aclip1_340_10070)\">\n        <path d=\"M110.868 56a16.609 16.609 0 0 0 2.091-9.449 16.65 16.65 0 0 0-3.54-9.017 16.947 16.947 0 0 0-7.989-5.582 17.135 17.135 0 0 0-9.778-.287 20.967 20.967 0 0 0-8.472-10.378 21.346 21.346 0 0 0-13.094-3.207 21.278 21.278 0 0 0-12.392 5.267 20.864 20.864 0 0 0-6.655 11.6 17.13 17.13 0 0 0-7.621-.13c-2.518.53-4.88 1.619-6.908 3.186a16.788 16.788 0 0 0-4.797 5.858 16.596 16.596 0 0 0-1.008 12.131l80.163.008z\" fill=\"#BDEDED\"/>\n        </g>\n        <defs>\n        <filter id=\"afilter0_d_340_10070\" x=\"0\" y=\"0\" width=\"143\" height=\"143\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\n        <fecolormatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\"/>\n        <fegaussianblur stdDeviation=\"2\"/>\n        <fecolormatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"/>\n        <feblend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow_340_10070\" result=\"shape\"/>\n        </filter>\n        <clippath id=\"aclip1_340_10070\">\n        <path fill=\"#fff\" transform=\"translate(30 18)\" d=\"M0 0h83v38H0z\"/>\n        </clippath>\n        </defs>\n    </symbol>\n    <symbol id=\"wind-icon\" fill=\"none\" viewBox=\"0 0 70 49\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g clip-path=\"url(#clip0_333_6173)\" fill=\"#C0BEBE\">\n        <path d=\"M33.053 22.292c-5.9 0-11.8.033-17.705-.044-.689 0-1.634-.439-1.996-.987-.717-1.083.307-2.248 1.906-2.256 5.355-.022 10.71-.022 16.071-.03 6.265 0 12.53 0 18.794-.027 2.297 0 4.514-.445 6.502-1.695 3.776-2.376 4.933-7.4 2.547-11.02-1.877-2.856-5.508-3.785-8.07-2.06-2.128 1.43-2.798 3.93-1.635 6.115.899 1.697 2.375 2.229 4.113 1.48a6.33 6.33 0 0 0 .605-.312c1.569-.888 2.375-.87 2.952.071.614.998.167 1.932-1.34 2.802-2.724 1.581-5.496 1.436-7.594-.4-2.312-2.027-3.19-5.601-2.089-8.515C47.836.85 53.027-1.272 57.606.792c3.514 1.585 5.538 4.386 5.976 8.224.501 4.386-1.06 7.99-4.63 10.611-2.67 1.958-5.761 2.607-8.99 2.621-5.627.025-11.254 0-16.887 0l-.022.044zM30.894 26.091h25.332c2.675 0 5.26.425 7.627 1.716 3.843 2.097 6.158 5.31 6.155 9.781-.002 4.471-2.364 7.555-6.188 9.594-2.547 1.35-5.317 1.782-8.172 1.82-1.024 0-1.82-.389-1.88-1.529-.065-1.212.695-1.727 1.796-1.757 2.762-.074 5.428-.507 7.782-2.086 3.78-2.536 4.53-7.218 1.661-10.718-2.124-2.594-5.063-3.44-8.256-3.493-3.995-.066-7.989-.024-11.984-.027l-39.357-.03h-.954c-1.443-.033-2.179-.603-2.179-1.672 0-1.07.725-1.618 2.204-1.618h26.421l-.008.02z\"/>\n        <path d=\"M20.203 13.835c-5.993 0-11.985.027-17.978-.036-.667 0-1.563-.356-1.947-.86-.752-.979.087-2.3 1.44-2.377 1.267-.071 2.54-.02 3.814-.016l31.997.054c.409 0 .817-.016 1.223.017 1.051.085 1.738.606 1.689 1.73-.044 1.052-.725 1.527-1.724 1.535-2.223.016-4.448 0-6.671 0H20.2l.003-.047z\"/>\n        </g>\n    </symbol>\n    <symbol id=\"clouds-icon\" fill=\"none\" viewBox=\"0 0 83 50\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g clip-path=\"url(#clip0_263_933)\" fill=\"#F5D46B\">\n        <path d=\"M47 23.957c-.037.08-.083.158-.113.24-.355.983-1.142 1.575-2.185 1.59-1.223.019-2.447.023-3.67 0-1.32-.024-2.3-1.037-2.294-2.312.012-1.253.995-2.242 2.293-2.267 1.178-.022 2.356-.011 3.534 0s1.948.56 2.346 1.684a.903.903 0 0 0 .092.152l-.003.913zM23.04 47c-.08-.038-.158-.084-.24-.113-.983-.355-1.576-1.142-1.592-2.185-.02-1.223-.022-2.448 0-3.671.024-1.317 1.04-2.304 2.313-2.293 1.253.011 2.243.995 2.267 2.293.022 1.177.012 2.356.005 3.533-.008 1.177-.56 1.949-1.684 2.347a.903.903 0 0 0-.152.092L23.039 47zM23.506 35.262c-6.48.008-11.747-5.247-11.773-11.743-.025-6.496 5.293-11.801 11.779-11.783 6.486.018 11.753 5.289 11.747 11.77a11.77 11.77 0 0 1-11.753 11.756zM8.55 40.892c-.992-.143-1.7-.57-2.103-1.413-.394-.828-.36-1.684.258-2.365A42.544 42.544 0 0 1 9.717 34.1c.861-.775 2.184-.644 3.003.17.82.816.954 2.144.184 3.003a41.773 41.773 0 0 1-3.018 3.01c-.346.313-.886.411-1.337.609zM6.217 8.485c.034-.939.467-1.642 1.312-2.041.828-.391 1.683-.35 2.363.268a43.032 43.032 0 0 1 2.986 2.979c.794.879.673 2.212-.16 3.034-.834.823-2.155.939-3.036.14A41.504 41.504 0 0 1 6.74 9.91c-.323-.357-.43-.909-.635-1.372l.113-.053zM40.774 8.642c.008.542-.267 1.09-.727 1.552-.818.827-1.631 1.655-2.465 2.464-1.003.973-2.415.984-3.326.05-.912-.934-.88-2.299.08-3.294.82-.845 1.653-1.678 2.5-2.497.741-.717 1.618-.9 2.575-.503.855.355 1.369 1.182 1.363 2.228zM38.5 40.777c-.671.013-1.222-.257-1.686-.714-.838-.828-1.68-1.656-2.496-2.5-.951-.99-.956-2.384-.042-3.293.913-.909 2.305-.898 3.292.057a97.382 97.382 0 0 1 2.529 2.533c.703.729.888 1.6.488 2.536-.383.897-1.109 1.346-2.086 1.381zM21.203 4.115c0-.597-.01-1.195 0-1.79.03-1.32 1.021-2.32 2.287-2.325 1.265-.005 2.274.995 2.3 2.312.02 1.208.018 2.417 0 3.625-.021 1.324-1.013 2.318-2.286 2.322-1.274.004-2.268-.988-2.3-2.31-.013-.612 0-1.222 0-1.834zM4.115 25.792c-.597 0-1.196.012-1.789 0C1.003 25.762.004 24.773 0 23.507c-.004-1.266.995-2.275 2.312-2.3 1.209-.02 2.417-.02 3.625 0 1.326.022 2.319 1.012 2.321 2.286.003 1.274-.985 2.265-2.308 2.3-.607.012-1.223 0-1.835 0z\"/>\n        </g>\n        <g clip-path=\"url(#aclip1_263_933)\">\n        <path d=\"M80.868 50a16.604 16.604 0 0 0-1.448-18.466 16.95 16.95 0 0 0-7.99-5.582 17.136 17.136 0 0 0-9.778-.287 20.967 20.967 0 0 0-8.473-10.378 21.346 21.346 0 0 0-13.093-3.207 21.278 21.278 0 0 0-12.392 5.267 20.864 20.864 0 0 0-6.655 11.6 17.13 17.13 0 0 0-7.621-.13c-2.518.53-4.88 1.619-6.909 3.186a16.789 16.789 0 0 0-4.796 5.858A16.595 16.595 0 0 0 .705 49.992L80.868 50z\" fill=\"#BDEDED\"/>\n        </g>\n        <defs>\n        <clippath id=\"aclip1_263_933\">\n        <path fill=\"#fff\" transform=\"translate(0 12)\" d=\"M0 0h83v38H0z\"/>\n        </clippath>\n        </defs>\n    </symbol>\n</svg>\n","<script>\n    import Icons from './Icons.svelte';\n\n    let wind = false;\n    let clouds = false;\n    let basicMap = true;\n    let slide;\n    let count = 1;\n\n    function handleBtnClick() {\n        if (clouds && count < 2) {\n            count++;\n            slide = count + '/2';\n        } else if (wind && count < 5) {\n            count++;\n            slide = count + '/5';\n        }\n    }\n</script>\n\n<Icons />\n<main>\n    <div class=\"container bg-image\">\n        <div class=\"navigation__container\">\n            <button> de </button>\n            <button> en </button>\n            <button> Login für Netzbetreiber </button>\n        </div>\n        <svg role=\"presentation\">\n            <use xlink:href=\"#heading\" />\n        </svg>\n        <div class=\"text__container\">\n            <p>\n                Hast du dich schon mal gefragt, wie du täglich Strom bekommst? Was leisten die Netzbetreiber jeden Tag,\n                damit es zu keinem Zusammenbruch kommt?\n            </p>\n            <p>\n                Komm mit uns auf eine Reise durch das Stromnetz und verfolge die Wege vom Erzeuger bis zu dir nach\n                Hause.\n            </p>\n        </div>\n        <div class=\"arrow__down\" />\n    </div>\n    <div class=\"map\">\n        <div class=\"map__text\">\n            <h2>Das passiert in Baden-Württemberg, damit du Strom hast.</h2>\n            <p>\n                Entdecke interaktiv, was passieren muss, dass der Strom immer ohne Probleme fließt und welche Faktoren\n                das Stromnetz beeinflussen können. Drücke dazu einfach auf die interaktiven Elemente.\n            </p>\n            <div class=\"map__btns\">\n                {#if !clouds}\n                    <button\n                        disabled={wind}\n                        on:click={() => {\n                            clouds = true;\n                            basicMap = false;\n                            slide = '1/2';\n                        }}\n                    >\n                        <svg role=\"presentation\">\n                            <use xlink:href=\"#clouds\" />\n                        </svg>\n                    </button>\n                {:else}\n                    <button\n                        class=\"pressed\"\n                        on:click={() => {\n                            clouds = true;\n                            basicMap = false;\n                        }}\n                    >\n                        <svg role=\"presentation\">\n                            <use xlink:href=\"#cloudspressed\" />\n                        </svg>\n                    </button>\n                {/if}\n                {#if !wind}\n                    <button\n                        disabled={clouds}\n                        on:click={() => {\n                            wind = true;\n                            basicMap = false;\n                            slide = '1/5';\n                        }}\n                    >\n                        <svg role=\"presentation\">\n                            <use xlink:href=\"#wind\" />\n                        </svg>\n                    </button>\n                {:else}\n                    <button\n                        class=\"pressed\"\n                        on:click={() => {\n                            wind = true;\n                        }}\n                    >\n                        <svg role=\"presentation\">\n                            <use xlink:href=\"#windpressed\" />\n                        </svg>\n                    </button>\n                {/if}\n            </div>\n        </div>\n        {#if wind && count === 1}\n            <div class=\"map__info--box\">\n                <h3>\n                    <svg role=\"presentaion\">\n                        <use xlink:href=\"#wind-icon\" />\n                    </svg>\n                    Starker Wind\n                    <span>\n                        {#if slide}\n                            {slide}\n                        {/if}\n                    </span>\n                </h3>\n                <p>\n                    Eine Starkwindfront zieht im Norden von Baden-Württemberg auf. Die Windkraftanlagen spesisen nun\n                    massiv Strom ins Netz ein. Es kommt zu kritischen Engpässen im Leitungssystem.\n                </p>\n                <button class=\"btn btn--next\" on:click={handleBtnClick}>weiter &#8594;</button>\n            </div>\n        {/if}\n        {#if wind && count === 2}\n            <div class=\"map__info--box\">\n                <h3>\n                    <svg role=\"presentaion\">\n                        <use xlink:href=\"#wind-icon\" />\n                    </svg>\n                    Starker Wind\n                    <span>\n                        {#if slide}\n                            {slide}\n                        {/if}\n                    </span>\n                </h3>\n                <p>\n                    Der Druck auf die Leitungen steigt an. Die Übertragungsnetzbetreiber müssen jetzt Redispatch\n                    anwenden.\n                </p>\n                <button class=\"btn btn--next\" on:click={handleBtnClick}>weiter &#8594;</button>\n            </div>\n        {/if}\n        {#if wind && count === 3}\n            <div class=\"map__info--box\">\n                <h3>\n                    <svg role=\"presentaion\">\n                        <use xlink:href=\"#wind-icon\" />\n                    </svg>\n                    Starker Wind\n                    <span>\n                        {#if slide}\n                            {slide}\n                        {/if}\n                    </span>\n                </h3>\n                <p>\n                    Im ersten Schritt, dem sogenannten negativen Redispatch weist die Systemführung konventionelle\n                    Kraftwerke und Windkraftanlagen im Norden an, ihre Einspeisung zu reduzieren. Erneuerbare Energien\n                    müssen gesetzlich vor allen anderen Erzeugungsarten eingespeist werden.\n                </p>\n                <button class=\"btn btn--next\" on:click={handleBtnClick}>weiter &#8594;</button>\n            </div>\n        {/if}\n        {#if wind && count === 4}\n            <div class=\"map__info--box\">\n                <h3>\n                    <svg role=\"presentaion\">\n                        <use xlink:href=\"#wind-icon\" />\n                    </svg>\n                    Starker Wind\n                    <span>\n                        {#if slide}\n                            {slide}\n                        {/if}\n                    </span>\n                </h3>\n                <p>\n                    Die Folge: der Strombedarf im Süden wird nicht mehr gedeckt. Deshalb schaletet die Systemführung im\n                    zweiten Schritt, dem sogenannten positiven Redispatch, direkt vor Ort im Süden Energie durch\n                    Biogasanlagen hinzu.\n                </p>\n                <button class=\"btn btn--next\" on:click={handleBtnClick}>weiter &#8594;</button>\n            </div>\n        {/if}\n        {#if wind && count === 5}\n            <div class=\"map__info--box\">\n                <h3>\n                    <svg role=\"presentaion\">\n                        <use xlink:href=\"#wind-icon\" />\n                    </svg>\n                    Starker Wind\n                    <span>\n                        {#if slide}\n                            {slide}\n                        {/if}\n                    </span>\n                </h3>\n                <p>\n                    Nach diesem zusätzlichen Redispatch sind alle Engpässe schließlich wieder ausgeglichen und das\n                    System ist wieder unkritisch.\n                </p>\n                <button class=\"btn btn--next\" on:click={handleBtnClick}>weiter &#8594;</button>\n            </div>\n        {/if}\n        {#if clouds && count === 1}\n            <div class=\"map__info--box\">\n                <h3>\n                    <svg role=\"presentaion\">\n                        <use xlink:href=\"#clouds-icon\" />\n                    </svg>\n                    Zunehmende Bewölkung\n                    <span>\n                        {#if slide}\n                            {slide}\n                        {/if}\n                    </span>\n                </h3>\n                <p>\n                    Ändert sich das Wetter durch zunehmende Bewölkung, wird weniger Solarstrom produziert und der Bedarf\n                    im Süden würde nicht mehr gedeckt.\n                </p>\n                <button class=\"btn btn--next\" on:click={handleBtnClick}>weiter &#8594;</button>\n            </div>\n        {/if}\n        {#if clouds && count === 2}\n            <div class=\"map__info--box\">\n                <h3>\n                    <svg role=\"presentaion\">\n                        <use xlink:href=\"#clouds-icon\" />\n                    </svg>\n                    Zunehmende Bewölkung\n                    <span>\n                        {#if slide}\n                            {slide}\n                        {/if}\n                    </span>\n                </h3>\n                <p>\n                    Durch einen regen Stromhandel wird dieses Defizit schnell ausgeglichen, indem automatisch\n                    preisgünstiger Strom z.B. aus Biogasanlagen zugeschaltet wird. Somit ist das System wieder stabil\n                    und der Strom fließt weiterhin ungehindert durch die Netze.\n                </p>\n                <button class=\"btn btn--next\" on:click={handleBtnClick}>weiter &#8594;</button>\n            </div>\n        {/if}\n        <div class=\"map__image\">\n            {#if basicMap}\n                <img src=\"/map-default.svg\" alt=\"map\" />\n            {/if}\n            {#if wind && count === 1}\n                <img src=\"/map-wind-01.svg\" alt=\"map\" />\n            {/if}\n            {#if wind && count === 2}\n                <img src=\"/map-wind-02.svg\" alt=\"map\" />\n            {/if}\n            {#if wind && count === 3}\n                <img src=\"/map-wind-03.svg\" alt=\"map\" />\n            {/if}\n            {#if wind && count === 4}\n                <img src=\"/map-wind-04.svg\" alt=\"map\" />\n            {/if}\n            {#if wind && count === 5}\n                <img src=\"/map-wind-05.svg\" alt=\"map\" />\n            {/if}\n            {#if clouds && count === 1}\n                <img src=\"/map-clouds-01.svg\" alt=\"map\" />\n            {/if}\n            {#if clouds && count === 2}\n                <img src=\"/map-clouds-02.svg\" alt=\"map\" />\n            {/if}\n            <button>\n                <svg role=\"presentation\">\n                    <use xlink:href=\"#dare\" />\n                </svg>\n            </button>\n        </div>\n    </div>\n    <div class=\"info\">\n        <div>\n            <h2>REDISPATCH 2.0 - DIE GRÜNE TRANSFORMATION.</h2>\n            <p>\n                Zukünftig werden auch Anlagen der Erneuerbaren Energien und KWKG-Anlagen am Redispatch teilnehmen und\n                auch Verteilnetzbetreiber werden eine Rolle im Redispatch erhalten.\n            </p>\n            <a href=\"#\" class=\"btn btn--next\">mehr erfahren</a>\n        </div>\n        <img src=\"placeholder-video-renewable-energy.png\" loading=\"lazy\" />\n    </div>\n    <div class=\"info--grey\">\n        <div>\n            <h2>Entdecke wie sich die Welt in den letzten Jahrzenten durch erneuerbare Energien verändert hat.</h2>\n            <p>\n                Die erneuerbaren Energien in Deutschland haben sich in den vergangenen Jahren weiter entwickelt und sind\n                auf dem Weg, eine wichtige Säule unserer Energieversorgung zu werden.\n            </p>\n            <p>\n                Entdecke die Entwicklung im Laufe der Jahre, indem du dich durch die interaktive Zeitleiste bewegst, die\n                von 1971 bis heute reicht.\n            </p>\n            <a class=\"btn btn--next\" href=\"#\" title=\"Zeitstrahl interaktiv entdecken\">\n                Zeitstrahl interaktiv entdecken\n            </a>\n        </div>\n        <img src=\"timeline.svg\" alt=\"timeline\" />\n    </div>\n</main>\n<footer>\n\t<div>\n\t\t<p>\n\t\t\t&copy; CoVerified {new Date().getFullYear()}\n\t\t</p>\n\t\t<a href=\"https://www.coverified.info/\" title=\"CoVerified Website\" target=\"_blank\" rel=\"noopener\">\n\t\t\tBesucht uns auf unserer Website\n\t\t</a>\n\t</div>\n</footer>\n\n<style type=\"text/scss\">\n    main {\n        position: relative;\n        max-width: 1920px;\n        height: 400rem;\n        overflow: hidden;\n    }\n\n    .btn {\n        &--next {\n            background-color: #7cbe82;\n            color: #fff;\n            border-radius: 1.5625rem;\n            padding: 0.75rem 2.372rem 0.75rem 2.875rem;\n        }\n    }\n\n    .bg-image {\n        background-image: url('/header-frau.png');\n        height: 1206px;\n        width: 100%;\n        background-repeat: no-repeat;\n\n        svg {\n            width: 47rem;\n            height: 29rem;\n            position: absolute;\n            left: 5.9375rem;\n            top: 7.5rem;\n        }\n\n        .text__container {\n            width: 39.375rem;\n            position: absolute;\n            right: 8.1875rem;\n            top: 41.875rem;\n\n            p {\n                color: #fff;\n                font-size: 1.875rem;\n                font-weight: 400;\n            }\n        }\n\n        .arrow__down {\n            position: absolute;\n            font-size: 8.75rem;\n            display: flex;\n            top: 63.5rem;\n            left: 50%;\n\n            &:before {\n                content: '\\2193';\n                color: #fff;\n            }\n        }\n\n        .navigation__container {\n            display: flex;\n            justify-content: flex-end;\n            align-items: center;\n            padding-top: 1.25rem;\n\n            button {\n                margin-right: 1.25rem;\n            }\n        }\n    }\n\n    .map {\n        display: grid;\n        grid-template-columns: 31rem 82.5rem;\n        grid-template-rows: 1fr 1fr;\n        position: relative;\n\n        &__text {\n            padding-left: 5.625rem;\n            padding-top: 3.75rem;\n            margin-bottom: 2.3175rem;\n        }\n\n        &__btns {\n            display: flex;\n\n            button {\n                box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n                border-radius: 10px;\n                background-color: #fff;\n\n                + button {\n                    margin-left: 2rem;\n                }\n\n                svg {\n                    width: 8.4375rem;\n                    height: 8.4375rem;\n                }\n\n                &.pressed {\n                    background-color: #636363;\n                }\n            }\n        }\n\n        .map__info--box {\n            background-color: #636363;\n            height: 23.1875rem;\n            position: relative;\n            grid-column: 1 / 2;\n            grid-row: 2 / 2;\n            color: #fff;\n            padding-left: 5.625rem;\n            padding-right: 1.625rem;\n\n            h3 {\n                color: #bcbcbc;\n                display: flex;\n                align-items: center;\n                border-bottom: 1px solid #f0f0f0;\n                font-size: 1.25rem;\n\n                &:before {\n                    position: absolute;\n                    border-bottom: 1px solid #f0f0f0;\n                    width: 100%;\n                }\n\n                span {\n                    color: #fff;\n                    margin-left: auto;\n                    margin-right: 1.1875rem;\n                }\n\n                svg {\n                    width: 4rem;\n                    height: 4rem;\n                    margin-right: 1.25rem;\n                }\n            }\n\n            button {\n                position: absolute;\n                bottom: 1rem;\n            }\n        }\n\n        &__image {\n            img {\n                width: 100%;\n                height: auto;\n                right: 0;\n                position: absolute;\n                z-index: -1;\n            }\n\n            button {\n                box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n                border-radius: 10px;\n                background-color: #fff;\n                position: absolute;\n                right: 7rem;\n                top: 23rem;\n\n                svg {\n                    width: 7.4375rem;\n                    height: 7.4375rem;\n                }\n            }\n        }\n    }\n\n    .info {\n        display: flex;\n        position: relative;\n        height: 49rem;\n        padding-right: 5.625rem;\n        padding-left: 5.625rem;\n\n        h2 {\n            font-weight: 700;\n            font-size: 5rem;\n            line-height: 90px;\n            color: #636363;\n            max-width: 800px;\n            margin-top: 0;\n        }\n\n        p {\n            max-width: 400px;\n        }\n\n        img {\n            position: absolute;\n            z-index: -1;\n            right: 0;\n            top: 6rem;\n            width: 60rem;\n            height: auto;\n        }\n\n        &--grey {\n            background-color: #636363;\n            padding-right: 5.625rem;\n            padding-left: 5.625rem;\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            color: #fff;\n\n            img {\n                margin: 0 auto;\n                padding-top: 4rem;\n\t\t\t\theight: 32.5rem;\n\t\t\t\tpadding-bottom: 1rem;\n            }\n\n            div {\n                padding-left: 4.75rem;\n                padding-top: 4rem;\n            }\n        }\n    }\n\n    h1 {\n        color: #fff;\n\n        text-transform: uppercase;\n        font-size: 6rem;\n        font-weight: 300;\n        position: absolute;\n        left: 17%;\n        top: 23%;\n    }\n\n    @media (min-width: 640px) {\n        main {\n            // max-width: none;\n        }\n    }\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":[],"mappings":"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"}